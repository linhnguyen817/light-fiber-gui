{"version":3,"sources":["constants.js","Components/Template.tsx","Components/LEDSquare.tsx","Components/PatternSelect.tsx","App.js","reportWebVitals.js","index.js"],"names":["rainbowTemplate","gradientTemplate","blankTemplate","blankPattern","apiUrl","Template","input","templateName","colorStrip","getColorStrip","className","map","color","i","style","backgroundColor","LEDSquare","onChange","colorString","index","updatePatternSquare","useContext","PatternContext","useState","colorPicker","showColorPicker","squareColor","changeColor","useEffect","onOutsideClick","onClick","onChangeComplete","hex","toUpperCase","PatternSelect","pattern","ledColors","a","axios","post","res","console","log","createContext","App","setPattern","updatePattern","newPattern","template","forEach","push","Provider","value","paddingLeft","Button","variant","type","handleSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PACaA,G,aAAkB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACtHC,EAAmB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvHC,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAGpHC,EAAe,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAE/UC,EAAS,oD,OCQf,IAAMC,EAAW,SAACC,GACrB,IAAIC,EAAeD,EAAMC,aACnBC,EAfV,SAAuBD,GACnB,OAAQA,GACJ,IAAK,UACD,OAAOP,EACX,IAAK,WACD,OAAOC,EACX,IAAK,QACD,OAAOC,EACX,QACI,MAAO,IAMIO,CAAcF,GACjC,OACI,sBAAKG,UAAU,WAAf,UACI,qBAAKA,UAAU,uBAAf,SACKF,EAAWG,KAAI,SAACC,EAAOC,GACpB,OAAO,qBAAaH,UAAU,eAAeI,MAAO,CAACC,gBAAiBH,IAArDC,QAGzB,mBAAGH,UAAU,iBAAb,SAA+BH,Q,mCCd9BS,EAAiD,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MAC7EC,EAAwBC,qBAAWC,GAAnCF,oBACN,EAAuCG,oBAAS,GAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAmCF,mBAASL,GAA5C,mBAAOQ,EAAP,KAAoBC,EAApB,KAgBA,OAbAC,qBAAU,WACHV,IAAcQ,IACbC,EAAYT,GACZE,EAAoBF,EAAaC,MAEtC,CAACD,IAEJU,qBAAU,WACNX,EAASS,GACTN,EAAoBM,EAAaP,KAClC,CAACO,IAIA,cAAC,IAAD,CAAqBG,eAAgB,WACjCJ,GAAgB,IADpB,SAGA,sBAAKf,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAMI,MAAO,CAACC,gBAAiBW,GAC1CI,QAAS,kBAAML,GAAiBD,MAEnCA,GAAe,qBAAKd,UAAU,cAAf,SACZ,cAAC,IAAD,CACIE,MAAOc,EACPK,iBAAkB,SAAAnB,GAAK,OAAIe,EAAYf,EAAMoB,IAAIC,0BCrCxDC,EAAgB,SAAC5B,GAC1B,IAAM6B,EAAYd,qBAAWC,GAAvBa,QAEN,OACI,qBAAKzB,UAAY,yBAAjB,SAEI,qBAAKA,UAAY,gBAAjB,SACKyB,EAAQxB,KAAI,SAACe,EAAqBP,GAC/B,OAAO,cAAC,EAAD,CAAuBD,YAAaQ,EAAaP,MAAOA,EAAOF,SAAU,cAAzDE,W,uECJ3C,WAA4BiB,GAA5B,eAAAC,EAAA,sEACoBC,IAAMC,KAAKnC,EAAQ,CAACgC,UAAWA,IADnD,OACQI,EADR,OAEEC,QAAQC,IAAI,wBAAyBF,GAFvC,4C,sBAKO,IAAMlB,EAAiBqB,0BAiEfC,MA/Df,WACE,MAA8BrB,mBAASpB,GAAvC,mBAAOgC,EAAP,KAAgBU,EAAhB,KAEA,SAASC,EAAcC,GAErB,IAAIC,EAAW,GACfD,EAAWE,SAAQ,SAAArC,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACvBmC,EAASE,KAAKtC,MAElBiC,EAAWG,GAQb,OACE,cAAC1B,EAAe6B,SAAhB,CAAyBC,MAAO,CAACjB,UAASW,gBAAe1B,oBAP3D,SAA6BR,EAAOO,GAClC,IAAI4B,EAAaZ,EACjBY,EAAW5B,GAASP,EACpBiC,EAAWE,KAIX,SACI,qBAAKrC,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,2DACA,sBAAKA,UAAU,UAAf,UACE,mDACA,sBAAKA,UAAU,eAAf,UACE,qBAAKoB,QAAS,kBAAMgB,EAAc9C,IAAlC,SACE,cAAC,EAAD,CAAUO,aAAc,cAE1B,qBAAKuB,QAAS,kBAAMgB,EAAc7C,IAAlC,SACE,cAAC,EAAD,CAAUM,aAAc,kBAG5B,qBAAKG,UAAU,eAAf,SACE,qBAAKoB,QAAS,kBAAMgB,EAAc5C,IAAlC,SACE,cAAC,EAAD,CAAUK,aAAc,iBAK9B,sBAAKG,UAAU,UAAf,UACE,mDACA,cAAC,EAAD,CAAesC,SAAUb,IACzB,mBAAGrB,MAAO,CAACuC,YAAa,QAAxB,+DAGF,qBAAK3C,UAAU,UAAf,SACE,iDAGF,qBAAKA,UAAU,UAAf,SACE,iDAGF,sBAAKA,UAAU,UAAf,UACE,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,SAAS1B,QAAS,kB,2CAAM2B,CAAatB,IAApE,oBAA8F,eC3D7FuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3e0f7c8c.chunk.js","sourcesContent":["// 10 squares\r\nexport const rainbowTemplate = [\"#FF0000\", \"#FF8A00\", \"#FFF500\", \"#9EE05C\", \"#1ED700\", \"#65E5D6\", \"#2097DB\", \"#3242D0\", \"#B240CF\", \"#D64EA8\"];\r\nexport const gradientTemplate = [\"#BE0505\", \"#D40000\", \"#FF0000\", \"#FF4040\", \"#FF6D6D\", \"#FF8B8B\", \"#FFB0B0\", \"#FAC9C9\", \"#FFDDDD\", \"#FFEBEB\"];\r\nexport const blankTemplate = [\"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\"]\r\n\r\n// 30 squares\r\nexport const blankPattern = [\"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\", \"#C4C4C4\"];\r\n\r\nexport const apiUrl = \"https://led-skirt-gui.herokuapp.com/update_design\";","import './template.css';\r\nimport { rainbowTemplate, gradientTemplate, blankTemplate } from './../constants';\r\n\r\nfunction getColorStrip(templateName: string): string[] {\r\n    switch (templateName) {\r\n        case \"rainbow\":\r\n            return rainbowTemplate;\r\n        case \"gradient\":\r\n            return gradientTemplate;\r\n        case \"blank\":\r\n            return blankTemplate;\r\n        default:\r\n            return [];\r\n    }\r\n} \r\n\r\nexport const Template = (input: {templateName: string} ) => {\r\n    var templateName = input.templateName;\r\n    const colorStrip = getColorStrip(templateName);\r\n    return (\r\n        <div className=\"template\">\r\n            <div className=\"template-color-strip\">\r\n                {colorStrip.map((color, i) => {\r\n                    return <div key={i} className=\"template-box\" style={{backgroundColor: color}}/>\r\n                })}\r\n            </div>\r\n            <p className=\"template-label\">{templateName}</p>\r\n        </div>\r\n    )\r\n}","import { FunctionComponent, useEffect, useContext, useState } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport './ledsquare.css';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport { PatternContext } from '../App';\r\n\r\nexport interface LEDSquareProps {\r\n    onChange: (value: string) => void;\r\n    colorString: string;\r\n    index: number;\r\n  }\r\n\r\nexport const LEDSquare : FunctionComponent<LEDSquareProps>  = ({onChange, colorString, index}) => {\r\n    var { updatePatternSquare } = useContext(PatternContext);\r\n    const [colorPicker, showColorPicker] = useState(false);\r\n    const [squareColor, changeColor] = useState(colorString);\r\n\r\n    // handles loading new template\r\n    useEffect(() => {\r\n        if(colorString!==squareColor) {\r\n            changeColor(colorString);\r\n            updatePatternSquare(colorString, index);\r\n        }\r\n    }, [colorString])\r\n\r\n    useEffect(() => {\r\n        onChange(squareColor);\r\n        updatePatternSquare(squareColor, index);\r\n    }, [squareColor]);\r\n    \r\n\r\n    return (\r\n        <OutsideClickHandler onOutsideClick={() => {\r\n            showColorPicker(false);\r\n          }}>\r\n        <div className=\"ledsquare\">\r\n            <div className=\"box\" style={{backgroundColor: squareColor}}  \r\n                onClick={() => showColorPicker(!colorPicker)}\r\n            />\r\n            {colorPicker && <div className=\"colorPicker\">\r\n                <SketchPicker \r\n                    color={squareColor}\r\n                    onChangeComplete={color => changeColor(color.hex.toUpperCase())}\r\n                />\r\n            </div>}\r\n        </div>\r\n        </OutsideClickHandler>\r\n    )\r\n}\r\n","import { useContext } from \"react\";\r\nimport { LEDSquare } from './LEDSquare';\r\nimport './ledsquare.css';\r\nimport { PatternContext } from './../App';\r\n\r\nexport const PatternSelect = (input: { template : [] }) => {\r\n    var { pattern } = useContext(PatternContext);\r\n\r\n    return (\r\n        <div className = \"patternSelectContainer\">\r\n            {/* <div className=\"arrowLeft\" ></div> */}\r\n            <div className = \"patternSelect\">\r\n                {pattern.map((squareColor: string, index: any) => {\r\n                    return <LEDSquare key={index} colorString={squareColor} index={index} onChange={() => {}}/>\r\n                })}\r\n            </div>\r\n            {/* <div className=\"arrowRight\"></div> */}\r\n        </div>\r\n    )\r\n}\r\n","import { useState, createContext } from \"react\";\r\nimport './App.css';\r\nimport './Components/template.css';\r\nimport { Template } from './Components/Template';\r\nimport { PatternSelect } from './Components/PatternSelect';\r\nimport axios from 'axios';\r\nimport { apiUrl, rainbowTemplate, gradientTemplate, blankTemplate, blankPattern } from './constants';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nasync function handleSubmit(ledColors) {\r\n  const res = await axios.post(apiUrl, {ledColors: ledColors});\r\n  console.log(\"Pattern update sent: \", res);\r\n};  \r\n\r\nexport const PatternContext = createContext();\r\n\r\nfunction App() {\r\n  const [pattern, setPattern] = useState(blankPattern);\r\n\r\n  function updatePattern(newPattern) {\r\n    // repeat each template square by 3\r\n    var template = [];\r\n    newPattern.forEach(color => {\r\n        for (let i = 0; i < 3; i++) \r\n        template.push(color);\r\n    });\r\n    setPattern(template);\r\n  };\r\n  function updatePatternSquare(color, index) {\r\n    var newPattern = pattern;\r\n    newPattern[index] = color;\r\n    setPattern(newPattern);\r\n  };\r\n\r\n  return (\r\n    <PatternContext.Provider value={{pattern, updatePattern, updatePatternSquare}}>\r\n        <div className=\"App\">\r\n          <div className=\"App-header\">\r\n            <h1>design your light fibers!</h1>\r\n            <div className=\"section\">\r\n              <h2>choose a template</h2>\r\n              <div className=\"template-row\">\r\n                <div onClick={() => updatePattern(rainbowTemplate)} >\r\n                  <Template templateName={\"rainbow\"} />\r\n                </div>\r\n                <div onClick={() => updatePattern(gradientTemplate)}>\r\n                  <Template templateName={\"gradient\"}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"template-row\">\r\n                <div onClick={() => updatePattern(blankTemplate)}>\r\n                  <Template templateName={\"blank\"}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n              <h2>waistband pattern</h2>\r\n              <PatternSelect template={pattern}/>\r\n              <p style={{paddingLeft: \"16px\"}}>click on a square to customize your LED strip!</p>\r\n            </div>\r\n            \r\n            <div className=\"section\">\r\n              <h2>effects (TBD)</h2>\r\n            </div>\r\n            \r\n            <div className=\"section\">\r\n              <h2>preview (TBD)</h2>\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n              <Button variant=\"primary\" type=\"submit\" onClick={() => handleSubmit(pattern)}>submit</Button>{' '}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </PatternContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}